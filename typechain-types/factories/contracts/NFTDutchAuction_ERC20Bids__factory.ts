/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTDutchAuction_ERC20Bids,
  NFTDutchAuction_ERC20BidsInterface,
} from "../../contracts/NFTDutchAuction_ERC20Bids";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20TokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "addressOfOwner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20TokenAddress",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721TokenAddress",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBlocksActionOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningBidAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001320380380620013208339818101604052810190620000379190620002c6565b85600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360028190555082600681905550816007819055508060088190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016200012f919062000373565b602060405180830381865afa1580156200014d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000173919062000390565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504360098190555060075443620001ca9190620003f1565b6005819055508181620001de91906200042c565b83620001eb9190620003f1565b600c81905550600c54600d819055506000600b60006101000a81548160ff02191690831515021790555050505050505062000477565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002538262000226565b9050919050565b620002658162000246565b81146200027157600080fd5b50565b60008151905062000285816200025a565b92915050565b6000819050919050565b620002a0816200028b565b8114620002ac57600080fd5b50565b600081519050620002c08162000295565b92915050565b60008060008060008060c08789031215620002e657620002e562000221565b5b6000620002f689828a0162000274565b96505060206200030989828a0162000274565b95505060406200031c89828a01620002af565b94505060606200032f89828a01620002af565b93505060806200034289828a01620002af565b92505060a06200035589828a01620002af565b9150509295509295509295565b6200036d816200028b565b82525050565b60006020820190506200038a600083018462000362565b92915050565b600060208284031215620003a957620003a862000221565b5b6000620003b98482850162000274565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620003fe826200028b565b91506200040b836200028b565b9250828201905080821115620004265762000425620003c2565b5b92915050565b600062000439826200028b565b915062000446836200028b565b925082820262000456816200028b565b9150828204841483151762000470576200046f620003c2565b5b5092915050565b610e9980620004876000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063864333741161008c578063db2e1eed11610066578063db2e1eed146101f4578063df241cb914610212578063ed7a4e0b14610230578063f835cd3c1461024e576100cf565b8063864333741461019a5780639d1b464a146101b8578063a4d89dc5146101d6576100cf565b806307d52fa8146100d45780631d0806ae146100f257806321e41eeb14610110578063454a2ab31461012e578063559405ee1461015e5780637e8305741461017c575b600080fd5b6100dc61026c565b6040516100e99190610841565b60405180910390f35b6100fa610272565b6040516101079190610841565b60405180910390f35b610118610278565b6040516101259190610841565b60405180910390f35b6101486004803603810190610143919061088d565b61027e565b60405161015591906108fb565b60405180910390f35b610166610737565b6040516101739190610841565b60405180910390f35b61018461073d565b6040516101919190610841565b60405180910390f35b6101a2610743565b6040516101af9190610931565b60405180910390f35b6101c0610756565b6040516101cd9190610841565b60405180910390f35b6101de61075c565b6040516101eb919061096d565b60405180910390f35b6101fc610782565b6040516102099190610841565b60405180910390f35b61021a610788565b60405161022791906109e7565b60405180910390f35b6102386107ac565b604051610245919061096d565b60405180910390f35b6102566107d2565b6040516102639190610a23565b60405180910390f35b60055481565b600c5481565b60075481565b6000600b60009054906101000a900460ff16156102d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c790610a9b565b60405180910390fd5b6005544310610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90610a9b565b60405180910390fd5b61031c6107f8565b600d54821015610361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035890610b07565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610b73565b60405180910390fd5b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610450929190610b93565b602060405180830381865afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104919190610bd1565b10156104d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c990610c4a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b815260040161055393929190610c8b565b6020604051808303816000875af1158015610572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105969190610cee565b6105d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cc90610d67565b60405180910390fd5b6001600b60006101000a81548160ff02191690831515021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002546040518463ffffffff1660e01b81526004016106d493929190610d87565b600060405180830381600087803b1580156106ee57600080fd5b505af1158015610702573d6000803e3d6000fd5b5050505081600a81905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600a5481565b60025481565b600b60009054906101000a900460ff1681565b600d5481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600954436108069190610ded565b6008546108139190610e21565b600c546108209190610ded565b600d81905550565b6000819050919050565b61083b81610828565b82525050565b60006020820190506108566000830184610832565b92915050565b600080fd5b61086a81610828565b811461087557600080fd5b50565b60008135905061088781610861565b92915050565b6000602082840312156108a3576108a261085c565b5b60006108b184828501610878565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e5826108ba565b9050919050565b6108f5816108da565b82525050565b600060208201905061091060008301846108ec565b92915050565b60008115159050919050565b61092b81610916565b82525050565b60006020820190506109466000830184610922565b92915050565b6000610957826108ba565b9050919050565b6109678161094c565b82525050565b6000602082019050610982600083018461095e565b92915050565b6000819050919050565b60006109ad6109a86109a3846108ba565b610988565b6108ba565b9050919050565b60006109bf82610992565b9050919050565b60006109d1826109b4565b9050919050565b6109e1816109c6565b82525050565b60006020820190506109fc60008301846109d8565b92915050565b6000610a0d826109b4565b9050919050565b610a1d81610a02565b82525050565b6000602082019050610a386000830184610a14565b92915050565b600082825260208201905092915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b6000610a85601183610a3e565b9150610a9082610a4f565b602082019050919050565b60006020820190508181036000830152610ab481610a78565b9050919050565b7f426964206973206c6f776572207468616e2063757272656e7420707269636500600082015250565b6000610af1601f83610a3e565b9150610afc82610abb565b602082019050919050565b60006020820190508181036000830152610b2081610ae4565b9050919050565b7f41756374696f6e2068617320616c7265616479206265656e20776f6e00000000600082015250565b6000610b5d601c83610a3e565b9150610b6882610b27565b602082019050919050565b60006020820190508181036000830152610b8c81610b50565b9050919050565b6000604082019050610ba860008301856108ec565b610bb560208301846108ec565b9392505050565b600081519050610bcb81610861565b92915050565b600060208284031215610be757610be661085c565b5b6000610bf584828501610bbc565b91505092915050565b7f496e73756666696369656e7420616c6c6f77616e636500000000000000000000600082015250565b6000610c34601683610a3e565b9150610c3f82610bfe565b602082019050919050565b60006020820190508181036000830152610c6381610c27565b9050919050565b6000610c75826109b4565b9050919050565b610c8581610c6a565b82525050565b6000606082019050610ca060008301866108ec565b610cad6020830185610c7c565b610cba6040830184610832565b949350505050565b610ccb81610916565b8114610cd657600080fd5b50565b600081519050610ce881610cc2565b92915050565b600060208284031215610d0457610d0361085c565b5b6000610d1284828501610cd9565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610d51600f83610a3e565b9150610d5c82610d1b565b602082019050919050565b60006020820190508181036000830152610d8081610d44565b9050919050565b6000606082019050610d9c6000830186610c7c565b610da96020830185610c7c565b610db66040830184610832565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610828565b9150610e0383610828565b9250828203905081811115610e1b57610e1a610dbe565b5b92915050565b6000610e2c82610828565b9150610e3783610828565b9250828202610e4581610828565b91508282048414831517610e5c57610e5b610dbe565b5b509291505056fea2646970667358221220b8c1b19b55fb5a8f56afd28a12ad2d9474b43d2e08474125bc5dc34bc49f549264736f6c63430008110033";

type NFTDutchAuction_ERC20BidsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDutchAuction_ERC20BidsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDutchAuction_ERC20Bids__factory extends ContractFactory {
  constructor(...args: NFTDutchAuction_ERC20BidsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTDutchAuction_ERC20Bids> {
    return super.deploy(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<NFTDutchAuction_ERC20Bids>;
  }
  override getDeployTransaction(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): NFTDutchAuction_ERC20Bids {
    return super.attach(address) as NFTDutchAuction_ERC20Bids;
  }
  override connect(signer: Signer): NFTDutchAuction_ERC20Bids__factory {
    return super.connect(signer) as NFTDutchAuction_ERC20Bids__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDutchAuction_ERC20BidsInterface {
    return new utils.Interface(_abi) as NFTDutchAuction_ERC20BidsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDutchAuction_ERC20Bids {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTDutchAuction_ERC20Bids;
  }
}
