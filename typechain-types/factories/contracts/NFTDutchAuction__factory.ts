/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTDutchAuction,
  NFTDutchAuctionInterface,
} from "../../contracts/NFTDutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "addressOfOwner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721TokenAddress",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBlocksActionOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningBidAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200103438038062001034833981810160405281019062000037919062000284565b846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360018190555082600581905550816006819055508060078190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401620000ee91906200031d565b602060405180830381865afa1580156200010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013291906200033a565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555043600881905550600654436200018991906200039b565b60048190555081816200019d9190620003d6565b83620001aa91906200039b565b600b81905550600b54600c819055506000600a60006101000a81548160ff021916908315150217905550505050505062000421565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021182620001e4565b9050919050565b620002238162000204565b81146200022f57600080fd5b50565b600081519050620002438162000218565b92915050565b6000819050919050565b6200025e8162000249565b81146200026a57600080fd5b50565b6000815190506200027e8162000253565b92915050565b600080600080600060a08688031215620002a357620002a2620001df565b5b6000620002b38882890162000232565b9550506020620002c6888289016200026d565b9450506040620002d9888289016200026d565b9350506060620002ec888289016200026d565b9250506080620002ff888289016200026d565b9150509295509295909350565b620003178162000249565b82525050565b60006020820190506200033460008301846200030c565b92915050565b600060208284031215620003535762000352620001df565b5b6000620003638482850162000232565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620003a88262000249565b9150620003b58362000249565b9250828201905080821115620003d057620003cf6200036c565b5b92915050565b6000620003e38262000249565b9150620003f08362000249565b9250828202620004008162000249565b915082820484148315176200041a57620004196200036c565b5b5092915050565b610c0380620004316000396000f3fe6080604052600436106100a75760003560e01c8063864333741161006457806386433374146101a15780639d1b464a146101cc578063a4d89dc5146101f7578063db2e1eed14610222578063df241cb91461024d578063ed7a4e0b14610278576100a7565b806307d52fa8146100ac5780631998aeef146100d75780631d0806ae146100f557806321e41eeb14610120578063559405ee1461014b5780637e83057414610176575b600080fd5b3480156100b857600080fd5b506100c16102a3565b6040516100ce9190610818565b60405180910390f35b6100df6102a9565b6040516100ec9190610874565b60405180910390f35b34801561010157600080fd5b5061010a610728565b6040516101179190610818565b60405180910390f35b34801561012c57600080fd5b5061013561072e565b6040516101429190610818565b60405180910390f35b34801561015757600080fd5b50610160610734565b60405161016d9190610818565b60405180910390f35b34801561018257600080fd5b5061018b61073a565b6040516101989190610818565b60405180910390f35b3480156101ad57600080fd5b506101b6610740565b6040516101c391906108aa565b60405180910390f35b3480156101d857600080fd5b506101e1610753565b6040516101ee9190610818565b60405180910390f35b34801561020357600080fd5b5061020c610759565b60405161021991906108e6565b60405180910390f35b34801561022e57600080fd5b5061023761077f565b6040516102449190610818565b60405180910390f35b34801561025957600080fd5b50610262610785565b60405161026f9190610960565b60405180910390f35b34801561028457600080fd5b5061028d6107a9565b60405161029a91906108e6565b60405180910390f35b60045481565b6000600a60009054906101000a900460ff1680156103165750600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b80156103705750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156103ec5760003390508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103c0573d6000803e3d6000fd5b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050610725565b600a60009054906101000a900460ff161561043c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610433906109d8565b60405180910390fd5b6004544310610480576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610477906109d8565b60405180910390fd5b6104886107cf565b600c543410156104cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c490610a44565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055590610ab0565b60405180910390fd5b6001600a60006101000a81548160ff02191690831515021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610622573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001546040518463ffffffff1660e01b81526004016106c693929190610af1565b600060405180830381600087803b1580156106e057600080fd5b505af11580156106f4573d6000803e3d6000fd5b5050505034600981905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b90565b600b5481565b60065481565b60095481565b60015481565b600a60009054906101000a900460ff1681565b600c5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600854436107dd9190610b57565b6007546107ea9190610b8b565b600b546107f79190610b57565b600c81905550565b6000819050919050565b610812816107ff565b82525050565b600060208201905061082d6000830184610809565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085e82610833565b9050919050565b61086e81610853565b82525050565b60006020820190506108896000830184610865565b92915050565b60008115159050919050565b6108a48161088f565b82525050565b60006020820190506108bf600083018461089b565b92915050565b60006108d082610833565b9050919050565b6108e0816108c5565b82525050565b60006020820190506108fb60008301846108d7565b92915050565b6000819050919050565b600061092661092161091c84610833565b610901565b610833565b9050919050565b60006109388261090b565b9050919050565b600061094a8261092d565b9050919050565b61095a8161093f565b82525050565b60006020820190506109756000830184610951565b92915050565b600082825260208201905092915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b60006109c260118361097b565b91506109cd8261098c565b602082019050919050565b600060208201905081810360008301526109f1816109b5565b9050919050565b7f426964206973206c6f776572207468616e2063757272656e7420707269636500600082015250565b6000610a2e601f8361097b565b9150610a39826109f8565b602082019050919050565b60006020820190508181036000830152610a5d81610a21565b9050919050565b7f41756374696f6e2068617320616c7265616479206265656e20776f6e00000000600082015250565b6000610a9a601c8361097b565b9150610aa582610a64565b602082019050919050565b60006020820190508181036000830152610ac981610a8d565b9050919050565b6000610adb8261092d565b9050919050565b610aeb81610ad0565b82525050565b6000606082019050610b066000830186610ae2565b610b136020830185610ae2565b610b206040830184610809565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b62826107ff565b9150610b6d836107ff565b9250828203905081811115610b8557610b84610b28565b5b92915050565b6000610b96826107ff565b9150610ba1836107ff565b9250828202610baf816107ff565b91508282048414831517610bc657610bc5610b28565b5b509291505056fea2646970667358221220b99c85701043d0beddcc02e96e39ec85547a3a435f419d46299f556c325e0a6664736f6c63430008110033";

type NFTDutchAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDutchAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDutchAuction__factory extends ContractFactory {
  constructor(...args: NFTDutchAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTDutchAuction> {
    return super.deploy(
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<NFTDutchAuction>;
  }
  override getDeployTransaction(
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): NFTDutchAuction {
    return super.attach(address) as NFTDutchAuction;
  }
  override connect(signer: Signer): NFTDutchAuction__factory {
    return super.connect(signer) as NFTDutchAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDutchAuctionInterface {
    return new utils.Interface(_abi) as NFTDutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDutchAuction {
    return new Contract(address, _abi, signerOrProvider) as NFTDutchAuction;
  }
}
